{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","errMessage","message","replace","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","addScope","signInWithPopup","icon","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","toggleEditing","updateDoc","doc","id","attachmentUrl","src","alt","window","confirm","deleteDoc","deleteObject","ref","faTrashAlt","faEdit","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","responseUrl","fileRef","uid","uuidv4","uploadString","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","file","files","reader","FileReader","addEventListener","onLoadendReader","finishedevent","result","removeEventListener","readAsDataURL","accept","faTimesCircle","color","size","Home","nweets","setNweets","useEffect","nweetsRef","query","orderBy","unsubscribe","onSnapshot","snapshot","nweetArray","forEach","data","push","map","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","user","signOut","Navigation","to","title","faHome","faUser","AppRouter","isLoggedIn","exact","path","htmlElem","document","documentElement","App","init","setInit","setUserObj","onAuthStateChanged","classList","toggle","Boolean","currentUser","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.b98e343b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider, \r\n  signInWithPopup, \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport {\r\n  getFirestore, \r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy, \r\n  doc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc } from \"firebase/firestore\";\r\nimport { \r\n  getStorage, \r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst auth = getAuth(firebaseApp);\r\nconst db = getFirestore();\r\nconst storage = getStorage(firebaseApp);\r\n\r\nexport {\r\n  firebaseApp,\r\n  auth,\r\n  db,\r\n  storage,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n}\r\n\r\nexport {\r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy,\r\n  doc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc\r\n}\r\n\r\nexport {\r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL,\r\n}","import React, { useState } from 'react';\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'fbase';\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                await createUserWithEmailAndPassword(auth, email, password);\r\n            } else {\r\n                await signInWithEmailAndPassword(auth, email, password);\r\n            }\r\n        } catch(err) {\r\n            let errMessage = err.message.replace('Firebase: ', '');\r\n            setError(errMessage);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = (e) => {\r\n        e.preventDefault();\r\n        setNewAccount(prev => !prev)\r\n    };\r\n\r\n    return (\r\n        <div className=\"authform\">\r\n            <form onSubmit={onSubmit}>\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Sign Up\" : \"Log In\"} />\r\n                <div className=\"authform__error\">\r\n                    {error}\r\n                </div>\r\n            </form>\r\n            <button onClick={toggleAccount} className=\"authform__togglebtn\">{newAccount ? \"Log In\" : \"Create Account\"}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { auth, GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (e) => {\r\n        const {currentTarget: {name}} = e;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new GithubAuthProvider();\r\n            provider.addScope('repo');\r\n        }\r\n        await signInWithPopup(auth, provider);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"auth__inner\">\r\n                <AuthForm />\r\n                <div className=\"auth__sociallogin\">\r\n                    <div className=\"auth__sociallogin-box\">\r\n                        <button onClick={onSocialClick} name=\"google\"><span>Continue with Google</span> <FontAwesomeIcon icon={faGoogle} /></button>\r\n                        <button onClick={onSocialClick} name=\"github\"><span>Continue with Github</span> <FontAwesomeIcon icon={faGithub} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { db, storage, doc, deleteDoc, updateDoc, ref, deleteObject } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = () => {\r\n        const confirmed = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (confirmed) {\r\n            deleteDoc(doc(db, 'nweets', nweetObj.id));\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                deleteObject(ref(storage, nweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateDoc(doc(db, 'nweets', nweetObj.id), {\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"nweet__edit\">\r\n                        <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required />\r\n                        <input type=\"submit\" value=\"Update\" className=\"nweet__edit-update\" />\r\n                        <button onClick={toggleEditing} className=\"nweet__edit-cancel\">Cancel</button>\r\n                    </form>\r\n                </>\r\n            ) : (\r\n                <div className=\"nweet__item\">\r\n                    <div className=\"nweet__item-content\">\r\n                        <p className=\"nweet__item-text\">{nweetObj.text}</p>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} className=\"nweet__item-img\" alt=\"\" />}\r\n                    </div>\r\n                    {isOwner && <div className=\"nweet__item-btns\">\r\n                        <button onClick={onDeleteClick}><FontAwesomeIcon icon={faTrashAlt} /><span className=\"blind\">Delete</span></button>\r\n                        <button onClick={toggleEditing}><FontAwesomeIcon icon={faEdit} /><span className=\"blind\">Edit</span></button>\r\n                    </div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { db, storage, collection, addDoc, ref, uploadString, getDownloadURL } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n    \r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let responseUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(fileRef, attachment, 'data_url');\r\n            responseUrl = await getDownloadURL(fileRef);\r\n        }\r\n        await addDoc(collection(db, 'nweets'), {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: responseUrl,\r\n        });\r\n        setNweet('');\r\n        setAttachment('');       \r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: {files}} = e;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        const onLoadendReader = (finishedevent) => {\r\n            const {currentTarget: { result }} = finishedevent;\r\n            setAttachment(result);\r\n            reader.removeEventListener('loadend', onLoadendReader);\r\n        }\r\n        \r\n        if (file) {\r\n            reader.addEventListener('loadend', onLoadendReader);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = (e) => {\r\n        e.preventDefault();\r\n        setAttachment(null);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"nweet-maker\">\r\n            <div className=\"nweet-maker__area\">\r\n                <div className=\"nweet-maker__content\">\r\n                    <input onChange={onChange} value={nweet} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                </div>\r\n                <div className=\"nweet-maker__btns\">\r\n                    <label htmlFor=\"inp_imgupload\">{attachment ? 'Change Image' : 'Upload Image'}</label>\r\n                    <input onChange={onFileChange} id=\"inp_imgupload\" type=\"file\" accept=\"image/*\" className=\"blind\" />\r\n                    <button type=\"submit\">Nweet</button>\r\n                </div>\r\n            </div>\r\n            {attachment && (\r\n                <div className=\"nweet-maker__imgs\">\r\n                    <p>Image Attachment : </p>\r\n                    <div className=\"nweet-maker__img\">\r\n                        <img src={attachment} alt=\"\" />\r\n                        <button onClick={onClearAttachment}><FontAwesomeIcon icon={faTimesCircle} color=\"#fff\" size=\"lg\" /> <span className=\"blind\">Cancel Upload</span></button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from 'react';\r\nimport { db, collection, onSnapshot, query, orderBy } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const nweetsRef = query(collection(db, 'nweets'), orderBy(\"createdAt\", \"desc\"));\r\n        const unsubscribe = onSnapshot(nweetsRef, snapshot => {\r\n            let nweetArray = [];\r\n            \r\n            snapshot.forEach(doc => {\r\n                const nweetObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }\r\n                nweetArray.push(nweetObj);\r\n            });\r\n            setNweets(nweetArray);\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { auth } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { updateProfile } from 'firebase/auth';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState((userObj.displayName || ''));\r\n\r\n    const onLogOutClick = () => {\r\n        auth.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await updateProfile(userObj.user, {\r\n                displayName: newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__info\">\r\n                <h2>{userObj.displayName}'s Profile</h2>\r\n            </div>\r\n            <form onSubmit={onSubmit} className=\"profile__form\">\r\n                <input onChange={onChange} className=\"profile__form-input\" type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\r\n                <button className=\"profile__form-submit\" type=\"submit\">Update Name</button>\r\n            </form>\r\n            <div className=\"profile__control\">\r\n                <button onClick={onLogOutClick}>Log Out</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav className=\"header\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\" title=\"Go to Home\"><FontAwesomeIcon icon={faHome} color=\"#fff\" /> <span className=\"blind\">Home</span></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" title=\"Go to My Profile\"><FontAwesomeIcon icon={faUser} color=\"#fff\" /><span className=\"blind\">{userObj.displayName} Profile</span></Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );  \r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div className=\"approuter\">\r\n                <Switch>\r\n                    {isLoggedIn ? \r\n                    (<>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>) : (<Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>)}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { auth } from 'fbase';\r\nimport 'components/App.scss';\r\n\r\nconst htmlElem = document.documentElement;\r\n\r\nconst App = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState({})\r\n    \r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    user: user,\r\n                });\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        htmlElem.classList.toggle('is-loggedin', Boolean(userObj));\r\n    }, [userObj]);\r\n\r\n    const refreshUser = () => {\r\n        const user = auth.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            user: user,\r\n        });\r\n        // Another option is to use Object.assign() method which will make React see that a new object has come and render\r\n        // setUserObj(Object.assign({}, user))\r\n    };\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n            {init ? <AppRouter userObj={userObj} isLoggedIn={Boolean(userObj)} refreshUser={refreshUser} /> : \"initializing\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}