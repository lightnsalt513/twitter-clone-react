{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","AuthForm","refreshUser","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","username","setUsername","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","userObj","updateProfile","user","displayName","signInWithEmailAndPassword","errMessage","message","replace","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","addScope","signInWithPopup","alert","icon","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","userName","userImage","setUser","useEffect","getDoc","doc","creatorId","userDocSnap","exists","userData","data","toggleEditing","updateDoc","id","Boolean","src","alt","faUser","color","Date","createdAt","toLocaleString","attachmentUrl","faEdit","window","confirm","deleteDoc","deleteObject","ref","faTrashAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","responseUrl","fileRef","uid","uuidv4","uploadString","getDownloadURL","addDoc","collection","now","setDoc","photoURL","maxLength","htmlFor","file","files","reader","FileReader","addEventListener","onLoadendReader","finishedevent","result","removeEventListener","readAsDataURL","accept","faTimesCircle","size","Home","nweets","setNweets","nweetsRef","query","orderBy","unsubscribe","onSnapshot","snapshot","nweetArray","forEach","push","map","Profile","history","useHistory","isEdit","setIsEdit","newDisplayName","setNewDisplayName","profileImg","setProfileImg","newProfileImg","setNewProfileImg","inpRef","useRef","current","focus","newProfileObj","signOut","Navigation","to","title","faHome","AppRouter","isLoggedIn","exact","path","htmlElem","document","documentElement","App","init","setInit","setUserObj","onAuthStateChanged","classList","toggle","currentUser","userRef","merge","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.5f34958d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider, \r\n  signInWithPopup, \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword,\r\n  updateProfile } from \"firebase/auth\";\r\nimport {\r\n  getFirestore, \r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy, \r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc } from \"firebase/firestore\";\r\nimport { \r\n  getStorage, \r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst auth = getAuth(firebaseApp);\r\nconst db = getFirestore();\r\nconst storage = getStorage(firebaseApp);\r\n\r\nexport {\r\n  firebaseApp,\r\n  auth,\r\n  db,\r\n  storage,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  updateProfile,\r\n}\r\n\r\nexport {\r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc\r\n}\r\n\r\nexport {\r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL,\r\n}","import React, { useState } from 'react';\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'fbase';\r\n\r\nconst AuthForm = ({ refreshUser }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        } else if (name === 'username') {\r\n            setUsername(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                const userObj = await createUserWithEmailAndPassword(auth, email, password);\r\n                await updateProfile(userObj.user, {\r\n                    displayName: username\r\n                })\r\n                refreshUser();\r\n            } else {\r\n                await signInWithEmailAndPassword(auth, email, password);\r\n            }\r\n        } catch(err) {\r\n            let errMessage = err.message.replace('Firebase: ', '');\r\n            setError(errMessage);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = (e) => {\r\n        e.preventDefault();\r\n        setNewAccount(prev => !prev)\r\n    };\r\n\r\n    return (\r\n        <div className=\"authform\">\r\n            <form onSubmit={onSubmit}>\r\n                {newAccount && \r\n                    <input name=\"username\" type=\"text\" placeholder=\"User name\" required value={username} onChange={onChange} />\r\n                }\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Sign Up\" : \"Log In\"} />\r\n                <div className=\"authform__error\">\r\n                    {error}\r\n                </div>\r\n            </form>\r\n            <button onClick={toggleAccount} className=\"authform__togglebtn\">{newAccount ? \"Log In\" : \"Create Account\"}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { auth, GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = ({ refreshUser }) => {\r\n    const onSocialClick = async (e) => {\r\n        const {currentTarget: {name}} = e;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new GithubAuthProvider();\r\n            provider.addScope('repo');\r\n        }\r\n        try {\r\n            await signInWithPopup(auth, provider);\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"auth__inner\">\r\n                <AuthForm refreshUser={refreshUser} />\r\n                <div className=\"auth__sociallogin\">\r\n                    <div className=\"auth__sociallogin-box\">\r\n                        <button onClick={onSocialClick} name=\"google\"><span>Continue with Google</span> <FontAwesomeIcon icon={faGoogle} /></button>\r\n                        <button onClick={onSocialClick} name=\"github\"><span>Continue with Github</span> <FontAwesomeIcon icon={faGithub} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState, useEffect } from \"react\";\r\nimport { db, storage, doc, deleteDoc, updateDoc, ref, deleteObject, query, getDoc} from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const [user, setUser] = useState({ userName:'', userImage:'' })\r\n\r\n    useEffect(() => {   \r\n        (async () => {\r\n            const userDocSnap = await getDoc(doc(db, 'users', nweetObj.creatorId))\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n                setUser({\r\n                    userName: userData.userName,\r\n                    userImage: userData.userImage,\r\n                });\r\n            }\r\n        })();\r\n    }, [])\r\n    \r\n    const onDeleteClick = () => {\r\n        const confirmed = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (confirmed) {\r\n            deleteDoc(doc(db, 'nweets', nweetObj.id));\r\n            if (nweetObj.attachmentUrl !== \"\") {\r\n                deleteObject(ref(storage, nweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const calcDate = () => {\r\n        const createdDate = new Date(nweetObj.createdAt).toLocaleString();\r\n        return createdDate;\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateDoc(doc(db, 'nweets', nweetObj.id), {\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <form onSubmit={onSubmit} className=\"nweet__edit\">\r\n                    <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required />\r\n                    <input type=\"submit\" value=\"Update\" className=\"nweet__edit-update\" />\r\n                    <button onClick={toggleEditing} className=\"nweet__edit-cancel\">Cancel</button>\r\n                </form>\r\n            ) : (\r\n                <div className=\"nweet__item\">\r\n                    <div className=\"nweet__item-box\">\r\n                        <div className=\"nweet__item-profile\">\r\n                            <div className=\"nweet__item-profile-img\">\r\n                                {Boolean(user.userImage) ? (\r\n                                    <img  src={user.userImage} alt=\"\" />\r\n                                ) : (\r\n                                    <FontAwesomeIcon icon={faUser} color=\"#000\" />\r\n                                )}\r\n                            </div>\r\n                            <p className=\"nweet__item-profile-name\">{user.userName}</p>\r\n                            <p className=\"nweet__item-profile-date\">{calcDate()}</p>\r\n                        </div>\r\n                        <div className=\"nweet__item-content\">\r\n                            <p className=\"nweet__item-text\">{nweetObj.text}</p>\r\n                            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} className=\"nweet__item-img\" alt=\"\" />}\r\n                        </div>\r\n                    </div>\r\n                    {isOwner && (\r\n                        <div className=\"nweet__item-btns\">\r\n                            <button onClick={toggleEditing}><FontAwesomeIcon icon={faEdit} /><span className=\"blind\">Edit</span></button>\r\n                            <button onClick={onDeleteClick}><FontAwesomeIcon icon={faTrashAlt} /><span className=\"blind\">Delete</span></button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { db, storage, collection, addDoc, setDoc, ref, uploadString, getDownloadURL, doc, getDoc } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n    \r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let responseUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(fileRef, attachment, 'data_url');\r\n            responseUrl = await getDownloadURL(fileRef);\r\n        }\r\n        await addDoc(collection(db, 'nweets'), {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: responseUrl,\r\n        });\r\n        const userDocSnap = await getDoc(doc(db, 'users', userObj.uid));\r\n        if (!userDocSnap.exists()) {\r\n            await setDoc(doc(db, 'users', userObj.uid), {\r\n                userName: userObj.displayName,\r\n                userImage: userObj.user.photoURL,\r\n            });\r\n        }\r\n        setNweet('');\r\n        setAttachment('');       \r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: {files}} = e;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        const onLoadendReader = (finishedevent) => {\r\n            const {currentTarget: { result }} = finishedevent;\r\n            setAttachment(result);\r\n            reader.removeEventListener('loadend', onLoadendReader);\r\n        }\r\n        \r\n        if (file) {\r\n            reader.addEventListener('loadend', onLoadendReader);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = (e) => {\r\n        e.preventDefault();\r\n        setAttachment(null);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"nweet-maker\">\r\n            <div className=\"nweet-maker__area\">\r\n                <div className=\"nweet-maker__content\">\r\n                    <input onChange={onChange} value={nweet} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                </div>\r\n                <div className=\"nweet-maker__btns\">\r\n                    <label htmlFor=\"nweet-maker__inp-imgupload\">{attachment ? 'Change Image' : 'Upload Image'}</label>\r\n                    <input onChange={onFileChange} id=\"nweet-maker__inp-imgupload\" type=\"file\" accept=\"image/*\" className=\"blind\" />\r\n                    <button type=\"submit\">Nweet</button>\r\n                </div>\r\n            </div>\r\n            {attachment && (\r\n                <div className=\"nweet-maker__imgs\">\r\n                    <p>Image Attachment : </p>\r\n                    <div className=\"nweet-maker__img\">\r\n                        <img src={attachment} alt=\"\" />\r\n                        <button onClick={onClearAttachment}><FontAwesomeIcon icon={faTimesCircle} color=\"#fff\" size=\"lg\" /> <span className=\"blind\">Cancel Upload</span></button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from 'react';\r\nimport { db, collection, onSnapshot, query, orderBy } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const nweetsRef = query(collection(db, 'nweets'), orderBy(\"createdAt\", \"desc\"));\r\n        const unsubscribe = onSnapshot(nweetsRef, snapshot => {\r\n            let nweetArray = [];\r\n            \r\n            snapshot.forEach(doc => {\r\n                const nweetObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }\r\n                nweetArray.push(nweetObj);\r\n            });\r\n            setNweets(nweetArray);\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { auth, getDownloadURL, ref, storage, updateProfile, uploadString, getDoc, deleteObject, doc, db } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [newDisplayName, setNewDisplayName] = useState((userObj.displayName || ''));\r\n    const [profileImg, setProfileImg] = useState(null);\r\n    const [newProfileImg, setNewProfileImg] = useState(null)\r\n    const inpRef = useRef();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const userDocSnap = await getDoc(doc(db, 'users', userObj.uid));\r\n            if (userDocSnap.exists()) {\r\n                const { userImage } = userDocSnap.data();\r\n                setProfileImg(userImage);\r\n                setNewProfileImg(userImage);\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isEdit) {\r\n            inpRef.current.focus();\r\n        }\r\n    }, [isEdit])\r\n\r\n    const onLogOutClick = () => {\r\n        auth.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: {files}} = e;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        const onLoadendReader = (finishedevent) => {\r\n            const {currentTarget: {result}} = finishedevent;\r\n            setNewProfileImg(result);\r\n            reader.removeEventListener('loadend', onLoadendReader);\r\n        };\r\n        reader.addEventListener('loadend', onLoadendReader);\r\n        \r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const onDeleteImageClick = () => {\r\n        if (newProfileImg !== '') {\r\n            setNewProfileImg('');\r\n        }\r\n    };\r\n\r\n    const onCancelClick = () => {\r\n        setNewProfileImg(profileImg);\r\n        setIsEdit(false);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let newProfileObj = {};\r\n        if (newProfileImg !== profileImg) {\r\n            if (newProfileImg === '') {\r\n                newProfileObj.photoURL = '';\r\n            } else {\r\n                const fileRef = ref(storage, `${userObj.uid}/profile/${uuidv4()}`);\r\n                await uploadString(fileRef, newProfileImg, 'data_url');\r\n                const responseUrl = await getDownloadURL(fileRef);\r\n                newProfileObj.photoURL = responseUrl;\r\n            }\r\n            if (Boolean(profileImg)) {\r\n                deleteObject(ref(storage, profileImg));\r\n            }\r\n            setProfileImg(newProfileObj.photoURL);\r\n        }\r\n        if (userObj.displayName !== newDisplayName) {\r\n            newProfileObj.displayName = newDisplayName;\r\n        }\r\n        if (newProfileImg !== profileImg || userObj.displayName !== newDisplayName) {\r\n            await updateProfile(userObj.user, newProfileObj);\r\n            refreshUser();\r\n        }\r\n        setIsEdit(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__img\">\r\n                    <div className=\"profile__img-display\">\r\n                        {Boolean(newProfileImg) ? (\r\n                            <img src={newProfileImg} alt=\"profile\" />\r\n                        ) : (\r\n                            <FontAwesomeIcon icon={faUser} color=\"#000\" />\r\n                        )}\r\n                    </div>\r\n                    {isEdit && (\r\n                        <div className=\"profile__img-edit\">\r\n                            <label htmlFor=\"profile__inp-imgupload\"><span className=\"blind\">Edit Profile Image</span></label>\r\n                            <input onChange={onFileChange} type=\"file\" accept=\"image/*\" id=\"profile__inp-imgupload\" className=\"blind\" />\r\n                            {newProfileImg && <button onClick={onDeleteImageClick}><FontAwesomeIcon icon={faTrashAlt} /><span className=\"blind\">Remove Image</span></button>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {isEdit ? (\r\n                    <input onChange={onChange} ref={inpRef} className=\"profile__input-name\" type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\r\n                ) : (\r\n                    <h2>{userObj.displayName}'s Profile</h2>\r\n                )}\r\n            </div>\r\n            <div className=\"profile__control\">\r\n                {isEdit ? (\r\n                    <>\r\n                        <button onClick={onSubmit}>Done</button>\r\n                        <button onClick={onCancelClick} type=\"button\">Cancel</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button onClick={() => setIsEdit(true)} type=\"button\">Edit Profile</button>\r\n                        <button onClick={onLogOutClick} type=\"button\">Log Out</button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav className=\"header\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\" title=\"Go to Home\"><FontAwesomeIcon icon={faHome} color=\"#fff\" /> <span className=\"blind\">Home</span></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" title=\"Go to My Profile\"><FontAwesomeIcon icon={faUser} color=\"#fff\" /><span className=\"blind\">{userObj.displayName} Profile</span></Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );  \r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div className=\"approuter\">\r\n                <Switch>\r\n                    {isLoggedIn ? \r\n                    (<>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>) : (<Route exact path=\"/\">\r\n                        <Auth refreshUser={refreshUser} />\r\n                    </Route>)}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { auth, db, doc, setDoc } from 'fbase';\r\nimport 'components/App.scss';\r\n\r\nconst htmlElem = document.documentElement;\r\n\r\nconst App = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState({})\r\n    \r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    user: user,\r\n                });\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        htmlElem.classList.toggle('is-loggedin', Boolean(userObj));\r\n    }, [userObj]);\r\n\r\n    const refreshUser = () => {\r\n        const user = auth.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            user: user,\r\n        });\r\n        const userRef = doc(db, 'users', user.uid);\r\n        setDoc(userRef, {\r\n            userName: user.displayName,\r\n            userImage: user.photoURL,\r\n        }, { merge: true });\r\n        // Another option is to use Object.assign() method which will make React see that a new object has come and render\r\n        // setUserObj(Object.assign({}, user))\r\n    };\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n            {init ? <AppRouter userObj={userObj} isLoggedIn={Boolean(userObj)} refreshUser={refreshUser} /> : \"initializing\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport 'normalize.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}