{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Comment.js","components/CommentFactory.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","AuthForm","refreshUser","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","username","setUsername","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","userObj","updateProfile","user","displayName","signInWithEmailAndPassword","errMessage","message","replace","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","addScope","signInWithPopup","alert","icon","faGoogle","faGithub","Comment","commentObj","setUser","useEffect","getDoc","doc","creatorId","userDocSnap","exists","userData","data","userName","userImage","src","alt","faUser","color","text","CommentFactory","nweetDbPath","userId","comment","setComment","addDoc","collection","createdAt","Date","now","Nweet","nweetObj","editing","setEditing","newNweet","setNewNweet","isOwner","setisOwner","likesCount","setLikesCount","ownerLike","setOwnerLike","comments","setComments","commentsCount","setCommentsCount","isCommentsActive","setIsCommentsActive","commentsInitialized","setCommentsInitialized","commentsRef","query","id","orderBy","unsubscribe","onSnapshot","snapshot","commentArray","commentCount","forEach","push","likeQuery","getDocs","likeSnap","count","empty","toggleEditing","onLikeClick","deleteDoc","setDoc","updateDoc","Boolean","toLocaleString","attachmentUrl","faComment","faThumbsUp","faEdit","window","confirm","deleteObject","ref","faTrashAlt","map","NweetFactory","nweet","setNweet","attachment","setAttachment","responseUrl","fileRef","uid","uuidv4","uploadString","getDownloadURL","photoURL","maxLength","htmlFor","file","files","reader","FileReader","addEventListener","onLoadendReader","finishedevent","result","removeEventListener","readAsDataURL","accept","faTimesCircle","size","Home","nweets","setNweets","nweetsRef","nweetArray","Profile","history","useHistory","isEdit","setIsEdit","newDisplayName","setNewDisplayName","profileImg","setProfileImg","newProfileImg","setNewProfileImg","inpRef","useRef","current","focus","newProfileObj","signOut","Navigation","to","title","faHome","AppRouter","isLoggedIn","exact","path","htmlElem","document","documentElement","App","init","setInit","setUserObj","onAuthStateChanged","classList","toggle","currentUser","userRef","merge","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.6502599d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider, \r\n  signInWithPopup, \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword,\r\n  updateProfile } from \"firebase/auth\";\r\nimport {\r\n  getFirestore, \r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy, \r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc } from \"firebase/firestore\";\r\nimport { \r\n  getStorage, \r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nconst auth = getAuth(firebaseApp);\r\nconst db = getFirestore();\r\nconst storage = getStorage(firebaseApp);\r\n\r\nexport {\r\n  firebaseApp,\r\n  auth,\r\n  db,\r\n  storage,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  updateProfile,\r\n}\r\n\r\nexport {\r\n  collection, \r\n  onSnapshot, \r\n  query, \r\n  orderBy,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  setDoc,\r\n  addDoc,\r\n  deleteDoc, \r\n  updateDoc\r\n}\r\n\r\nexport {\r\n  ref, \r\n  deleteObject,\r\n  uploadString,\r\n  getDownloadURL,\r\n}","import React, { useState } from 'react';\r\nimport { auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from 'fbase';\r\n\r\nconst AuthForm = ({ refreshUser }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [username, setUsername] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const onChange = (e) => {\r\n        const {target: {name, value}} = e;\r\n        if (name === 'email') {\r\n            setEmail(value);\r\n        } else if (name === 'password') {\r\n            setPassword(value);\r\n        } else if (name === 'username') {\r\n            setUsername(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                const userObj = await createUserWithEmailAndPassword(auth, email, password);\r\n                await updateProfile(userObj.user, {\r\n                    displayName: username\r\n                })\r\n                refreshUser();\r\n            } else {\r\n                await signInWithEmailAndPassword(auth, email, password);\r\n            }\r\n        } catch(err) {\r\n            let errMessage = err.message.replace('Firebase: ', '');\r\n            setError(errMessage);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = (e) => {\r\n        e.preventDefault();\r\n        setNewAccount(prev => !prev)\r\n    };\r\n\r\n    return (\r\n        <div className=\"authform\">\r\n            <form onSubmit={onSubmit}>\r\n                {newAccount && \r\n                    <input name=\"username\" type=\"text\" placeholder=\"User name\" required value={username} onChange={onChange} />\r\n                }\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\r\n                <input type=\"submit\" value={newAccount ? \"Sign Up\" : \"Log In\"} />\r\n                <div className=\"authform__error\">\r\n                    {error}\r\n                </div>\r\n            </form>\r\n            <button onClick={toggleAccount} className=\"authform__togglebtn\">{newAccount ? \"Log In\" : \"Create Account\"}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from 'react';\r\nimport { auth, GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = ({ refreshUser }) => {\r\n    const onSocialClick = async (e) => {\r\n        const {currentTarget: {name}} = e;\r\n        let provider;\r\n        if (name === 'google') {\r\n            provider = new GoogleAuthProvider();\r\n        } else if (name === 'github') {\r\n            provider = new GithubAuthProvider();\r\n            provider.addScope('repo');\r\n        }\r\n        try {\r\n            await signInWithPopup(auth, provider);\r\n        } catch (err) {\r\n            alert(err.message);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"auth\">\r\n            <div className=\"auth__inner\">\r\n                <AuthForm refreshUser={refreshUser} />\r\n                <div className=\"auth__sociallogin\">\r\n                    <div className=\"auth__sociallogin-box\">\r\n                        <button onClick={onSocialClick} name=\"google\"><span>Continue with Google</span> <FontAwesomeIcon icon={faGoogle} /></button>\r\n                        <button onClick={onSocialClick} name=\"github\"><span>Continue with Github</span> <FontAwesomeIcon icon={faGithub} /></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useState, useEffect } from 'react';\r\nimport { db, doc, getDoc } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Comment = ({ commentObj }) => {\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const userDocSnap = await getDoc(doc(db, 'users', commentObj.creatorId));\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n                setUser({\r\n                    userName: userData.userName,\r\n                    userImage: userData.userImage,\r\n                });\r\n            }\r\n        })();\r\n    });\r\n    \r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"comment__thumbnail\">\r\n                <div className=\"comment__img\">\r\n                    {user.userImage ? (\r\n                        <img src={user.userImage} alt=\"\" />\r\n                    ) : (\r\n                        <FontAwesomeIcon icon={faUser} color=\"#000\" />\r\n                    )}\r\n                </div>\r\n                <div className=\"comment__user\">{user.userName} : </div>\r\n            </div>\r\n            <div className=\"comment__text\">{commentObj.text}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;","import { addDoc, collection, db } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst CommentFactory = ({ nweetDbPath, userId }) => {\r\n    const [comment, setComment] = useState('');\r\n    \r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setComment(value);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (comment !== '') {\r\n            await addDoc(collection(db, `${nweetDbPath}/comments`), {\r\n                text: comment,\r\n                creatorId: userId,\r\n                createdAt: Date.now()\r\n            });\r\n            setComment('');\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"comment-maker\">\r\n            <form onSubmit={onSubmit}>\r\n                <input onChange={onChange} value={comment} type=\"text\" />\r\n                <button>Add Comment</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { db, storage, doc, deleteDoc, updateDoc, ref, deleteObject, getDoc, query, collection, getDocs, addDoc, setDoc, orderBy, onSnapshot } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment, faEdit, faThumbsUp, faTrashAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport Comment from 'components/Comment';\r\nimport CommentFactory from 'components/CommentFactory';\r\n\r\nconst Nweet = ({ nweetObj, userId }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const [user, setUser] = useState({ userName:'', userImage:'' });\r\n    const [isOwner, setisOwner] = useState(false)\r\n    const [likesCount, setLikesCount] = useState(0);\r\n    const [ownerLike, setOwnerLike] = useState(false);\r\n    const [comments, setComments] = useState([]);\r\n    const [commentsCount, setCommentsCount] = useState(0);\r\n    const [isCommentsActive, setIsCommentsActive] = useState(false);\r\n    const [commentsInitialized, setCommentsInitialized] = useState(false);\r\n\r\n    useEffect(() => {   \r\n        if (nweetObj.creatorId === userId) setisOwner(true);\r\n\r\n        const commentsRef = query(collection(db, `nweets/${nweetObj.id}/comments`), orderBy(\"createdAt\", \"desc\"));\r\n        const unsubscribe = onSnapshot(commentsRef, snapshot => {\r\n            let commentArray = [];\r\n            let commentCount = 0;\r\n            snapshot.forEach(doc => {\r\n                const commentObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id\r\n                }\r\n                commentArray.push(commentObj);\r\n                commentCount++;\r\n            });\r\n            setComments(commentArray);\r\n            setCommentsCount(commentCount);\r\n        });\r\n\r\n        (async () => {\r\n            const userDocSnap = await getDoc(doc(db, 'users', nweetObj.creatorId));\r\n            if (userDocSnap.exists()) {\r\n                const userData = userDocSnap.data();\r\n                setUser({\r\n                    userName: userData.userName,\r\n                    userImage: userData.userImage,\r\n                });\r\n            }\r\n        })();\r\n        \r\n        (async () => {\r\n            const likeQuery = query(collection(db, `nweets/${nweetObj.id}/likes`));\r\n            const likeSnap = await getDocs(likeQuery);\r\n            let count = 0;\r\n            if (!likeSnap.empty) {\r\n                likeSnap.forEach((doc) => {\r\n                    if (doc.id === userId) setOwnerLike(true);\r\n                    count++;\r\n                });\r\n            }\r\n            setLikesCount(count);\r\n        })();\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n    \r\n    const onDeleteClick = () => {\r\n        const confirmed = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (confirmed) {\r\n            deleteDoc(doc(db, 'nweets', nweetObj.id));\r\n            if (nweetObj.attachmentUrl !== '') {\r\n                deleteObject(ref(storage, nweetObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const calcDate = () => {\r\n        const createdDate = new Date(nweetObj.createdAt).toLocaleString();\r\n        return createdDate;\r\n    };\r\n\r\n    const onLikeClick = async () => {\r\n        if (ownerLike) {\r\n            await deleteDoc(doc(db, `nweets/${nweetObj.id}/likes`, userId));\r\n            setOwnerLike(false);\r\n            setLikesCount(prev => prev - 1);\r\n        } else {\r\n            await setDoc(doc(db, `nweets/${nweetObj.id}/likes`, userId), {});\r\n            setOwnerLike(true);\r\n            setLikesCount(prev => prev + 1);\r\n        }\r\n    };\r\n\r\n    const onCommentClick = () => {\r\n        if (!commentsInitialized) setCommentsInitialized(true);\r\n        setIsCommentsActive(!isCommentsActive);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateDoc(doc(db, 'nweets', nweetObj.id), {\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <form onSubmit={onSubmit} className=\"nweet__edit\">\r\n                    <input type=\"text\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} required />\r\n                    <input type=\"submit\" value=\"Update\" className=\"nweet__edit-update\" />\r\n                    <button onClick={toggleEditing} className=\"nweet__edit-cancel\">Cancel</button>\r\n                </form>\r\n            ) : (\r\n                <div className=\"nweet__item\">\r\n                    <div className=\"nweet__item-box\">\r\n                        <div className=\"nweet__item-profile\">\r\n                            <div className=\"nweet__item-profile-img\">\r\n                                {Boolean(user.userImage) ? (\r\n                                    <img  src={user.userImage} alt=\"\" />\r\n                                ) : (\r\n                                    <FontAwesomeIcon icon={faUser} color=\"#000\" />\r\n                                )}\r\n                            </div>\r\n                            <p className=\"nweet__item-profile-name\">{user.userName}</p>\r\n                            <p className=\"nweet__item-profile-date\">{calcDate()}</p>\r\n                        </div>\r\n                        <div className=\"nweet__item-content\">\r\n                            <p className=\"nweet__item-text\">{nweetObj.text}</p>\r\n                            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} className=\"nweet__item-img\" alt=\"\" />}\r\n                        </div>\r\n                        <div className=\"nweet__item-menu\">\r\n                            <button className={'nweet__item-menu-comments' + (isCommentsActive ? ' is-active' : '')} onClick={onCommentClick}><FontAwesomeIcon icon={faComment} />{commentsCount}<span className=\"blind\">Comments</span></button>\r\n                            <button className={'nweet__item-menu-likes' + (ownerLike ? ' is-active' : '')} onClick={onLikeClick}><FontAwesomeIcon icon={faThumbsUp} />{likesCount}<span className=\"blind\">Likes</span></button>\r\n                        </div>\r\n                        {isOwner && (\r\n                            <div className=\"nweet__item-btns\">\r\n                                <button onClick={toggleEditing}><FontAwesomeIcon icon={faEdit} /><span className=\"blind\">Edit</span></button>\r\n                                <button onClick={onDeleteClick}><FontAwesomeIcon icon={faTrashAlt} /><span className=\"blind\">Delete</span></button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className={'nweet__item-comments' + (isCommentsActive ? ' is-open' : '')}>\r\n                        <CommentFactory nweetDbPath={`nweets/${nweetObj.id}`} userId={userId} />\r\n                        {commentsInitialized && comments.map(comment => {\r\n                            return <Comment key={comment.id} commentObj={comment} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { db, storage, collection, addDoc, setDoc, ref, uploadString, getDownloadURL, doc, getDoc } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState('');\r\n    const [attachment, setAttachment] = useState('');\r\n    \r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let responseUrl = '';\r\n        if (attachment !== '') {\r\n            const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\r\n            await uploadString(fileRef, attachment, 'data_url');\r\n            responseUrl = await getDownloadURL(fileRef);\r\n        }\r\n        await addDoc(collection(db, 'nweets'), {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl: responseUrl,\r\n        });\r\n        const userDocSnap = await getDoc(doc(db, 'users', userObj.uid));\r\n        if (!userDocSnap.exists()) {\r\n            await setDoc(doc(db, 'users', userObj.uid), {\r\n                userName: userObj.displayName,\r\n                userImage: userObj.user.photoURL,\r\n            });\r\n        }\r\n        setNweet('');\r\n        setAttachment('');       \r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: {files}} = e;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        const onLoadendReader = (finishedevent) => {\r\n            const {currentTarget: { result }} = finishedevent;\r\n            setAttachment(result);\r\n            reader.removeEventListener('loadend', onLoadendReader);\r\n        }\r\n        \r\n        if (file) {\r\n            reader.addEventListener('loadend', onLoadendReader);\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = (e) => {\r\n        e.preventDefault();\r\n        setAttachment(null);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"nweet-maker\">\r\n            <div className=\"nweet-maker__area\">\r\n                <div className=\"nweet-maker__content\">\r\n                    <input onChange={onChange} value={nweet} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                </div>\r\n                <div className=\"nweet-maker__btns\">\r\n                    <label htmlFor=\"nweet-maker__inp-imgupload\">{attachment ? 'Change Image' : 'Upload Image'}</label>\r\n                    <input onChange={onFileChange} id=\"nweet-maker__inp-imgupload\" type=\"file\" accept=\"image/*\" className=\"blind\" />\r\n                    <button type=\"submit\">Nweet</button>\r\n                </div>\r\n            </div>\r\n            {attachment && (\r\n                <div className=\"nweet-maker__imgs\">\r\n                    <p>Image Attachment : </p>\r\n                    <div className=\"nweet-maker__img\">\r\n                        <img src={attachment} alt=\"\" />\r\n                        <button onClick={onClearAttachment}><FontAwesomeIcon icon={faTimesCircle} color=\"#fff\" size=\"lg\" /> <span className=\"blind\">Cancel Upload</span></button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;","import React, { useState, useEffect } from 'react';\r\nimport { db, collection, onSnapshot, query, orderBy } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const nweetsRef = query(collection(db, 'nweets'), orderBy(\"createdAt\", \"desc\"));\r\n        const unsubscribe = onSnapshot(nweetsRef, snapshot => {\r\n            let nweetArray = [];\r\n            \r\n            snapshot.forEach(doc => {\r\n                const nweetObj = {\r\n                    ...doc.data(),\r\n                    id: doc.id,\r\n                }\r\n                nweetArray.push(nweetObj);\r\n            });\r\n            setNweets(nweetArray);\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <div>\r\n            <NweetFactory userObj={userObj} />\r\n            <div>\r\n                {nweets.map(nweet => <Nweet key={nweet.id} nweetObj={nweet} userId={userObj.uid} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState, useEffect, useRef } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { auth, getDownloadURL, ref, storage, updateProfile, uploadString, getDoc, deleteObject, doc, db } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [newDisplayName, setNewDisplayName] = useState((userObj.displayName || ''));\r\n    const [profileImg, setProfileImg] = useState(null);\r\n    const [newProfileImg, setNewProfileImg] = useState(null)\r\n    const inpRef = useRef();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const userDocSnap = await getDoc(doc(db, 'users', userObj.uid));\r\n            if (userDocSnap.exists()) {\r\n                const { userImage } = userDocSnap.data();\r\n                setProfileImg(userImage);\r\n                setNewProfileImg(userImage);\r\n            }\r\n        })();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (isEdit) {\r\n            inpRef.current.focus();\r\n        }\r\n    }, [isEdit])\r\n\r\n    const onLogOutClick = () => {\r\n        auth.signOut();\r\n        history.push('/');\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value}} = e;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onFileChange = (e) => {\r\n        const {target: {files}} = e;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        const onLoadendReader = (finishedevent) => {\r\n            const {currentTarget: {result}} = finishedevent;\r\n            setNewProfileImg(result);\r\n            reader.removeEventListener('loadend', onLoadendReader);\r\n        };\r\n        reader.addEventListener('loadend', onLoadendReader);\r\n        \r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const onDeleteImageClick = () => {\r\n        if (newProfileImg !== '') {\r\n            setNewProfileImg('');\r\n        }\r\n    };\r\n\r\n    const onCancelClick = () => {\r\n        setNewProfileImg(profileImg);\r\n        setIsEdit(false);\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let newProfileObj = {};\r\n        if (newProfileImg !== profileImg) {\r\n            if (newProfileImg === '') {\r\n                newProfileObj.photoURL = '';\r\n            } else {\r\n                const fileRef = ref(storage, `${userObj.uid}/profile/${uuidv4()}`);\r\n                await uploadString(fileRef, newProfileImg, 'data_url');\r\n                const responseUrl = await getDownloadURL(fileRef);\r\n                newProfileObj.photoURL = responseUrl;\r\n            }\r\n            if (Boolean(profileImg)) {\r\n                deleteObject(ref(storage, profileImg));\r\n            }\r\n            setProfileImg(newProfileObj.photoURL);\r\n        }\r\n        if (userObj.displayName !== newDisplayName) {\r\n            newProfileObj.displayName = newDisplayName;\r\n        }\r\n        if (newProfileImg !== profileImg || userObj.displayName !== newDisplayName) {\r\n            await updateProfile(userObj.user, newProfileObj);\r\n            refreshUser();\r\n        }\r\n        setIsEdit(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__img\">\r\n                    <div className=\"profile__img-display\">\r\n                        {Boolean(newProfileImg) ? (\r\n                            <img src={newProfileImg} alt=\"profile\" />\r\n                        ) : (\r\n                            <FontAwesomeIcon icon={faUser} color=\"#000\" />\r\n                        )}\r\n                    </div>\r\n                    {isEdit && (\r\n                        <div className=\"profile__img-edit\">\r\n                            <label htmlFor=\"profile__inp-imgupload\"><span className=\"blind\">Edit Profile Image</span></label>\r\n                            <input onChange={onFileChange} type=\"file\" accept=\"image/*\" id=\"profile__inp-imgupload\" className=\"blind\" />\r\n                            {newProfileImg && <button onClick={onDeleteImageClick}><FontAwesomeIcon icon={faTrashAlt} /><span className=\"blind\">Remove Image</span></button>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {isEdit ? (\r\n                    <input onChange={onChange} ref={inpRef} className=\"profile__input-name\" type=\"text\" placeholder=\"Display name\" value={newDisplayName} />\r\n                ) : (\r\n                    <h2>{userObj.displayName}'s Profile</h2>\r\n                )}\r\n            </div>\r\n            <div className=\"profile__control\">\r\n                {isEdit ? (\r\n                    <>\r\n                        <button onClick={onSubmit}>Done</button>\r\n                        <button onClick={onCancelClick} type=\"button\">Cancel</button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button onClick={() => setIsEdit(true)} type=\"button\">Edit Profile</button>\r\n                        <button onClick={onLogOutClick} type=\"button\">Log Out</button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav className=\"header\">\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\" title=\"Go to Home\"><FontAwesomeIcon icon={faHome} color=\"#fff\" /> <span className=\"blind\">Home</span></Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" title=\"Go to My Profile\"><FontAwesomeIcon icon={faUser} color=\"#fff\" /><span className=\"blind\">{userObj.displayName} Profile</span></Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );  \r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport 'components/Router.scss';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <div className=\"approuter\">\r\n                <Switch>\r\n                    {isLoggedIn ? \r\n                    (<>\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </>) : (<Route exact path=\"/\">\r\n                        <Auth refreshUser={refreshUser} />\r\n                    </Route>)}\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useState, useEffect } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { auth, db, doc, setDoc } from 'fbase';\r\n\r\nconst htmlElem = document.documentElement;\r\n\r\nconst App = () => {\r\n    const [init, setInit] = useState(false);\r\n    const [userObj, setUserObj] = useState({})\r\n    \r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserObj({\r\n                    displayName: user.displayName,\r\n                    uid: user.uid,\r\n                    user: user,\r\n                });\r\n            } else {\r\n                setUserObj(null);\r\n            }\r\n            setInit(true);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        htmlElem.classList.toggle('is-loggedin', Boolean(userObj));\r\n    }, [userObj]);\r\n\r\n    const refreshUser = () => {\r\n        const user = auth.currentUser;\r\n        setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            user: user,\r\n        });\r\n        const userRef = doc(db, 'users', user.uid);\r\n        setDoc(userRef, {\r\n            userName: user.displayName,\r\n            userImage: user.photoURL,\r\n        }, { merge: true });\r\n        // Another option is to use Object.assign() method which will make React see that a new object has come and render\r\n        // setUserObj(Object.assign({}, user))\r\n    };\r\n    \r\n    return (\r\n        <div className=\"app\">\r\n            {init ? <AppRouter userObj={userObj} isLoggedIn={Boolean(userObj)} refreshUser={refreshUser} /> : \"initializing\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport 'styles/main.scss';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}